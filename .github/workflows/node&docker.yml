name: Node&Docker
on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - production
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  pull_request:
    branches:
      - master
      - production
env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: personal-web
  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  HEROKU_APP_NAME: bervianto-web-api
jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [14.x, 16.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: https://npm.pkg.github.com/
        always-auth: true
    - name: yarn and yarn test
      run: |
        yarn --frozen-lockfile
        yarn test
        yarn compile
      env:
        CI: true
    - name: Codecov
      run: bash <(curl -s https://codecov.io/bash)
  docker-build:
    needs: build
    runs-on: ubuntu-20.04
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --build-arg NODE_AUTH_TOKEN=${NODE_AUTH_TOKEN}
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  docker-push:
    # Ensure test job passes before pushing image.
    needs: build
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to the Heroku Registry
        uses: docker/login-action@v1
        with:
          registry: registry.heroku.com
          username: bervianto.leo@gmail.com
          password: ${{ secrets.HEROKU_API_KEY }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            berviantoleo/${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository }}
            registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web
      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
