name: Node&Docker
on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - production
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  pull_request:
    branches:
      - master
      - production
env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: personal-web
  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  HEROKU_APP_NAME: bervianto-web-api
jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: https://npm.pkg.github.com/
        always-auth: true
    - name: yarn and yarn test
      run: |
        yarn
        yarn test
        yarn compile
      env:
        CI: true
    - name: Codecov
      run: bash <(curl -s https://codecov.io/bash)
    - name: Push to Railway
      if: ${{ github.event_name == 'push' }}
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN && matrix.node-version == '14.x' }}
      run: |
        npm i -g @railway/cli
        [[ "${{ github.ref }}" == "refs/heads/master" ]] && RAILWAY_GIT_BRANCH=staging
        railway status
        railway up
  docker-build:
    needs: build
    runs-on: ubuntu-20.04
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --build-arg NODE_AUTH_TOKEN=${NODE_AUTH_TOKEN}
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  docker-push:
    # Ensure test job passes before pushing image.
    needs: build
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --build-arg NODE_AUTH_TOKEN=${NODE_AUTH_TOKEN}
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "" #Must be unique in Heroku
          heroku_email: "bervianto.leo@gmail.com"
          justlogin: true
      - name: Heroku Container Login & Update
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          heroku update
          heroku container:login
      - name: Push image & Release
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          HEROKU_IMAGE=registry.heroku.com/$HEROKU_APP_NAME/web
          docker tag $IMAGE_NAME $HEROKU_IMAGE
          docker push $HEROKU_IMAGE
          heroku container:release web --app=${HEROKU_APP_NAME}
